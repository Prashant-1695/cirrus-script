# Lets store all our function at one place

# set your gmail and email
git config --global user.email "$gmail"
git config --global user.name "$CIRRUS_REPO_OWNER"

# lets store some variables
github_repo="https://$CIRRUS_REPO_OWNER:$github_token@github.com/$CIRRUS_REPO_FULL_NAME"
progress=https://cirrus-ci.com/build/$CIRRUS_BUILD_ID
device_codename=$(grep unch /tmp/ci/build.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)
rom_name=$(grep init /tmp/ci/sync -m 1 | cut -d / -f 4)

# Compress function with pigz for faster compression
com () {
tar --use-compress-program="pigz -k -$2 " -cf $1.tar.gz $1
}

# install apt
install_apt () {
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null
apt update && apt install wget pigz gh jq
}

# login in github before uploading
echo $github_token > mytoken.txt # login in github
gh auth login --with-token < mytoken.txt

# upload our rom zip
upload () {
upload_link=$CIRRUS_REPO_CLONE_URL
gh release create $rom_name --generate-notes --repo $upload_link
gh release upload --clobber $rom_name $1 --repo $upload_link
echo "Link: $upload_link/releases/download/$rom_name/$1"
}

# push to telegram
tg () {
curl -s "https://api.telegram.org/bot${bot_api}/sendmessage" --data "text=$1&chat_id=${chat_id}"
}

# sync time
sync_time () {
sync_time="`cat /tmp/sync_time.txt`"
rm -rf sync_time.txt
}
